/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mdivis' at '11/15/16 10:10 AM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'

def apiVersion = "1.0"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'
	compile 'org.apache.httpcomponents:httpclient:4.5.2'
	compile 'org.apache.httpcomponents:httpmime:4.5.2'	
	compile 'com.google.code.gson:gson:2.8.0'
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task buildJar(type: Jar) {
	version "${apiVersion}"
	from sourceSets.main.output
	baseName "c3api"
}

task createPom(dependsOn: buildJar) {
	doLast {
		pom {
			project {
				inceptionYear '2016'
				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						distribution 'repo'
					}
				}
				version "${apiVersion}"
				groupId "cz.gargoyle"
				artifactId "c3api"
			}
		}.writeTo("${buildDir}/c3api-${apiVersion}.pom")
	}
}

task prepareArtifact(type: Copy, dependsOn: createPom) {
	from "${buildDir}/c3api-${apiVersion}.pom"
	from "${buildDir}/libs/c3api-${apiVersion}.jar"
	into "maven-repo"
}